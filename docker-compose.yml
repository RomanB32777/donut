version: '3.9'

services:
  nginx:
    build: ./nginx
    ports:
      - "8000:8000"

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=NenadoTak1987
      - DB_NAME=donut
      - GOOGLE_APPLICATION_CREDENTIALS=serviceaccount.json
    depends_on:
      - db
    networks:
     - web
    volumes:
      - ./backend/images:/backend/images

  db:
    image: postgres:13-alpine
    volumes:
      # - pg_data:/var/lib/postgresql/data/
      # - ./dump.sql:/docker-entrypoint-initdb.d/dummy_dump.sql
      - ./database.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    expose:
      - 5432
    networks:
     - web
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=NenadoTak1987
      - POSTGRES_DB=donut

  evmos:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BACKEND_PORT=5000
        - NODE_ENV=production
        - BLOCKCHAIN=metamask
        - BLOCKCHAIN=evmos
    depends_on:
      - backend
      - nginx
    networks:
     - web
    ports:
      - "8097:80"

  klaytn:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BACKEND_PORT=5000
        - NODE_ENV=production
        - WALLET=metamask
        - BLOCKCHAIN=klay-token
    depends_on:
      - backend
      - nginx
    networks:
      - web
    ports:
      - "8095:80"

  tron:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BACKEND_PORT=5000
        - NODE_ENV=production
        - WALLET=tronlink
        - BLOCKCHAIN=tron
    depends_on:
      - backend
      - nginx
    networks:
      - web
    ports:
      - "8092:80"

  landing:
    build: 
      context: ./landing
      dockerfile: Dockerfile
      args:
        - BACKEND_PORT=5000
        - NODE_ENV=production
    depends_on:
      - backend
      - nginx
    networks:
     - web
    ports:
      - "8090:80"

networks:
  web:
    external: true

volumes:
  pg_data: