import { addErrorNotification } from "./../notifications";
import {
  IBalanceObj,
  ICreateContractObj,
  IPayObj,
  IWalletConf,
  IMintBadgeObj,
  IQuantityBalanceObj,
} from "./types";
import {
  addAuthWalletNotification,
  addInstallWalletNotification,
} from "../../utils";
import { fromHexToString } from "../stringMethods";
import tronlinkIcon from "../../assets/tronlinkIcon.png";
import { isProduction } from "../../axiosClient";

// enum TRON_WALLET_ERR {
//   BANDWITH_ERROR = "There is not enough bandwidth or TRX to burn to send a transaction.",
//   SIGERROR = "Signature error",
//   CONTRACT_VALIDATE_ERROR = "Contract validate error",
// }

const getTronWallet = (blockchainName?: any) =>
  new Promise((resolve) => {
    setTimeout(async () => {
      if ((window as any).tronWeb) {
        if ((window as any).tronWeb.defaultAddress.base58)
          resolve({ address: (window as any).tronWeb.defaultAddress.base58 });
        else {
          addAuthWalletNotification("Tronlink");
          const currBlock = await (window as any).tronWeb.trx.getCurrentBlock();
          currBlock && currBlock.blockID
            ? resolve({
                address: (window as any).tronWeb.defaultAddress.base58,
              })
            : resolve(null);
        }
      } else
        addInstallWalletNotification(
          "TronLink",
          "https://chrome.google.com/webstore/detail/tronlink/ibnejdfjmmkpcnlpebklmnkoeoihofec"
        );
      resolve(null);
    }, 500);
  });

const payByTron = async ({ contract, addressTo, sum }: IPayObj) => {
  let instance = await (window as any).tronWeb.contract().at(contract);
  const resHash = await instance.transferMoney(addressTo).send({
    feeLimit: 100_000_000,
    callValue: 1000000 * parseFloat(sum),
    shouldPollResponse: false,
  });

  if (resHash) {
    const transactionInfo = await (window as any).tronWeb.trx.getTransaction(
      resHash
    );

    if (transactionInfo?.ret) {
      const result = transactionInfo.ret[0]?.contractRet;
      if (result !== "SUCCESS") throw new Error(result);
      return { resHash, result };
    } else return resHash;
  }
  return null;
};

const getTronBalance = async ({ walletData, setBalance }: IBalanceObj) => {
  const tronWeb = (window as any).tronWeb;
  const tronBalance = await tronWeb.trx.getBalance(walletData.address);
  
  if (tronBalance) {
    const formatTronBalance = tronWeb.fromSun(tronBalance);
    console.log("balance", formatTronBalance);
    setBalance &&
      formatTronBalance &&
      setBalance(parseFloat(formatTronBalance));
    return parseFloat(formatTronBalance);
  }
  return 0;
};

const getTronTransactionInfo = async (hash: string) => {
  const transactionResult = await (
    window as any
  ).tronWeb.trx.getTransactionInfo(hash);

  if (transactionResult) return transactionResult;
  return null;
};

const createTronContract = async ({
  _uri,
  abi,
  bytecode,
  setLoadingStep,
}: ICreateContractObj) => {
  const transaction = await (
    window as any
  ).tronWeb.transactionBuilder.createSmartContract(
    {
      abi,
      bytecode,
      feeLimit: 1000000000,
      callValue: 0,
      userFeePercentage: 30,
      originEnergyLimit: 1e7,
      parameters: [_uri],
    },
    (window as any).tronWeb.defaultAddress.hex
  );

  console.log("transaction", transaction);

  const signedTransaction = await (window as any).tronWeb.trx.sign(transaction);

  setLoadingStep({ finishedStep: 1, loadingStep: 2 });

  const contract_instance = await (
    window as any
  ).tronWeb.trx.sendRawTransaction(signedTransaction);

  if (contract_instance.transaction) {
    const contract_address = (window as any).tronWeb.address.fromHex(
      contract_instance.transaction.contract_address
    );
    const transactionHashID = contract_instance.transaction.txID;

    const transactionInfo = await (window as any).tronWeb.trx.getTransaction(
      transactionHashID
    );

    setLoadingStep({ finishedStep: 2 });

    if (transactionInfo?.ret) {
      const result = transactionInfo.ret[0]?.contractRet;

      return {
        transaction_hash: transactionHashID || "",
        contract_address,
        result,
      };
    } else {
      const transactionInfo = await (
        window as any
      ).tronWeb.trx.getTransactionInfo(transactionHashID);

      if (transactionInfo?.__payload__) {
        const hash = transactionInfo.__payload__?.value;
        return { transaction_hash: hash || "", contract_address };
      }
    }
    return { contract_address };
  } else if (contract_instance.code) {
    const message = fromHexToString(contract_instance.message); // txid
    addErrorNotification({ message });
    // TRON_WALLET_ERR[contract_instance.code as keyof typeof TRON_WALLET_ERR]
    // TRON_WALLET_ERR[contract_instance.code as tronErrors]);
    return null;
  }
};

const getBadgeURITron = async (
  contract_address: string,
  walletConf: IWalletConf
) => {
  const { abi } = walletConf;
  if (abi) {
    const instance = await (window as any).tronWeb.contract(
      abi,
      contract_address
    );

    const getURInew = await instance.uri(1).call();
    return getURInew;
  }
  return "";
};

const mintBadgeTron = async (mintObj: IMintBadgeObj) => {
  const { contract_address, addressTo } = mintObj;
  const instance = await (window as any).tronWeb
    .contract()
    .at(contract_address);
  await instance.mint(addressTo, 1, 1).send({
    feeLimit: 100_000_000,
    callValue: 0,
    shouldPollResponse: true,
  });
};

const getQuantityBalanceTron = async (
  objForQuantityBalance: IQuantityBalanceObj,
  walletConf: IWalletConf
) => {
  const { abi } = walletConf;
  if (abi) {
    const { supporter_address, contract_address, isCreator } =
      objForQuantityBalance;
    const instance = await (window as any).tronWeb.contract(
      abi,
      contract_address
    );
    const balanceToken = isCreator
      ? await instance.totalSupply(1).call()
      : await instance.balanceOf(supporter_address, 1).call();
    return balanceToken.toNumber();
  }
  return null;
};

const tronAbi =
  '[{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]';

const tronlinkConf: IWalletConf = {
  blockchains: [
    {
      address: isProduction
        ? "TAke85ayaVdsymmUjoaMC3w25zsQfQA7vk"
        : "TX6dd8YNKRCKZazcBZUHZQjyckzxvPKYJU",
      name: "tron",
      icon: tronlinkIcon,
      chainName: "Tron Nile Testnet",
      badgeName: "Tron",
      nativeCurrency: {
        name: "tron",
        symbol: "TRX",
      },
    },
  ],
  icon: tronlinkIcon,
  getWalletData: (blockchainName) => getTronWallet(blockchainName),
  paymentMethod: (objForPay) => payByTron({ ...objForPay }),
  getBalance: (objForBalance) => getTronBalance({ ...objForBalance }),
  createContract: (objForContract) => createTronContract({ ...objForContract }),
  getBadgeURI(contract_address) {
    return getBadgeURITron(contract_address, this);
  },
  mintBadge(objForBadge) {
    return mintBadgeTron(objForBadge);
  },
  getQuantityBalance(objForQuantityBalance) {
    return getQuantityBalanceTron(objForQuantityBalance, this);
  },
  getTransactionInfo: (hash) => getTronTransactionInfo(hash),
  abi: JSON.parse(tronAbi),
  bytecode:
    "",
};

export default tronlinkConf;
